# ========================================
# AI Study Helper Backend - Docker Compose
# ========================================
# Local development environment setup
# ========================================

version: '3.8'

services:
  # ========================================
  # Main Application
  # ========================================
  app:
    build:
      context: .
      target: development
    container_name: ai-study-helper-app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://mongodb:27017/ai-study-helper-dev
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - ai-study-helper-network
    restart: unless-stopped
    command: npm run dev

  # ========================================
  # MongoDB Database
  # ========================================
  mongodb:
    image: mongo:6.0
    container_name: ai-study-helper-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=ai-study-helper-dev
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - ai-study-helper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # Redis Cache
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: ai-study-helper-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-study-helper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # MongoDB Express (Admin UI)
  # ========================================
  mongo-express:
    image: mongo-express:latest
    container_name: ai-study-helper-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - ai-study-helper-network
    restart: unless-stopped

  # ========================================
  # Redis Commander (Admin UI)
  # ========================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ai-study-helper-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - ai-study-helper-network
    restart: unless-stopped

  # ========================================
  # Nginx Reverse Proxy (Optional)
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: ai-study-helper-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - ai-study-helper-network
    restart: unless-stopped
    profiles:
      - production

# ========================================
# Volumes
# ========================================
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

# ========================================
# Networks
# ========================================
networks:
  ai-study-helper-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
